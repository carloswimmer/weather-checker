{"version":3,"sources":["assets/rain.jpg","assets/clouds.jpg","assets/clear.jpg","model/Forecast.js","model/Measure.js","actions/forecastsController.js","actions/forecastActions.js","env.js","actions/types.js","assets/WeatherLogo.svg","components/ScaleSwitcher.js","components/Header.js","components/Loader.js","components/Background.js","components/Button.js","components/TimeController.js","components/Hour.js","components/Details.js","components/ChartRow.js","components/DayCard.js","components/CardRow.js","components/Forecasts.js","components/Content.js","reducers/forecastReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","Forecast","monthDay","date","measures","number","averageTemp","this","Measure","hour","mainTemp","weatherIcon","windSpeed","mainDescription","simplify","array","forecasts","forEach","item","measure","dt_txt","substr","main","temp","weather","icon","wind","speed","forecast","dateFormatter","concat","push","console","log","complete","Date","day","getDate","month","getMonth","year","getFullYear","groupByDay","groupMonthDay","groupDate","group","groupedArray","setAverageTemp","temps","total","floatAverage","groupBy","reduce","prev","curr","length","Math","round","prop","grouped","value","element","find","setAverageDescription","descriptions","sorted","name","count","counter","sort","a","b","averageDescription","filter","dayCards","fetchForecasts","isFahrenheit","dispatch","url","axios","get","then","response","data","list","simplified","simplifiedList","groupedList","forecastsController","type","payload","catch","error","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","transform","d","fill","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","ScaleSwitcher","textStyle","fontWeight","containerStyle","display","alignItems","event","result","checked","handleIsFahrenheit","style","Hidden","xsDown","Typography","variant","color","smUp","OrangeSwitch","onChange","toggleScale","inputProps","Component","withStyles","switchBase","backgroundColor","track","Switch","connect","state","useStyles","makeStyles","root","flexGrow","nameBold","Header","classes","className","AppBar","Toolbar","theme","base","container","marginTop","minHeight","button","borderRadius","card","maxWidth","chart","justifyContent","Loader","Fragment","CssBaseline","Container","fixed","Grid","justify","sm","spacing","Background","Image","Rain","Clouds","Clear","position","top","left","backgroundImage","backgroundRepeat","backgroundSize","zIndex","opacity","dayDescription","backgroundStyle","fab","margin","Button","next","direction","Fab","aria-label","TimeController","increment","days","onClick","changeDays","newDayCards","map","Hour","flexDirection","src","alt","fahrenheit","barStyle","Details","forecastHours","groupWrapper","chartStyle","ChartRow","padding","textAlign","xs","Paper","component","paperStyle","detailsDate","media","DayCard","Card","CardActionArea","CardMedia","CardContent","gutterBottom","description","CardActions","size","CardRow","changeDetails","getDates","getTemperature","getDescription","details","Forecasts","smDown","md","mdUp","Content","isLoading","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92f8003e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rain.f5950170.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clouds.181a9cc0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clear.3f6db26c.jpg\";","export default class Forecast {\n\n  constructor(\n    monthDay= '',\n    date='',\n    measures= [],\n    number= 0,\n    averageTemp= 0\n  ) {\n      this.monthDay = monthDay;\n      this.date = date;\n      this.measures = measures;\n      this.number = number;\n      this.averageTemp = averageTemp;\n    }\n}\n","export default class Measure {\n\n  constructor(\n    hour= '',\n    mainTemp= 0,\n    weatherIcon= '',\n    windSpeed= 0,\n    mainDescription=''\n  ) {\n      this.hour = hour;\n      this.mainTemp = mainTemp;\n      this.weatherIcon = weatherIcon;\n      this.windSpeed = windSpeed;\n      this.mainDescription = mainDescription;\n    }\n}\n","import Forecast from '../model/Forecast'\nimport Measure from '../model/Measure'\n\nexport const forecastsController = forecasts => {\n  const simplifiedList = simplify(forecasts)\n  const groupedList = groupByDay(simplifiedList)\n  setAverageTemp(groupedList)\n  setAverageDescription(groupedList)\n\n  return groupedList\n}\n\nexport const simplify = array => {\n  let forecasts = []\n\n  array.forEach(item => {\n    let measure = new Measure(\n      item.dt_txt.substr(11, 5),\n      item.main.temp,\n      item.weather[0].icon,\n      item.wind.speed,\n      item.weather[0].main\n    )\n    let forecast = new Forecast(\n      item.dt_txt.substr(8, 2),\n      dateFormatter(item.dt_txt),\n      [].concat(measure)\n    )\n    forecasts.push(forecast)\n  })\n  console.log(forecasts)\n  return forecasts\n}\n\nexport const dateFormatter = date => {\n  const complete = new Date(date)\n  const day = complete.getDate()\n  const monthNumber = complete.getMonth()\n  const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', \n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n  const month = monthNames[monthNumber]\n  const year = complete.getFullYear()\n  const dateFormatted = `${day} ${month} ${year}`\n\n  return dateFormatted\n}\n\nconst groupByDay = array => {\n  let groupMonthDay = array[0].monthDay\n  let groupDate = array[0].date\n  let group = new Forecast(groupMonthDay, groupDate, [], 0)\n  let groupedArray = []\n  let number = 0\n\n  groupedArray.push(group)\n  array.forEach(item => {\n    if (item.monthDay === groupMonthDay) {\n      group.measures.push(item.measures[0])\n      return\n    }\n    number ++\n    group = item\n    group.number = number\n    groupedArray.push(group)\n    groupMonthDay = group.monthDay\n    return\n  })\n \n  return groupedArray\n}\n\nconst setAverageTemp = array => {\n  let temps = []\n  let total = {}\n  let floatAverage = 0\n  array.forEach(item => {\n    temps = groupBy(item.measures, 'mainTemp')\n    total = temps.reduce((prev, curr) => prev + curr)\n    if (temps.length) floatAverage = total / temps.length\n    item.averageTemp = Math.round(floatAverage)\n  })\n}\n\nconst groupBy = (array, prop) => {\n  let grouped = []\n  let value = 0\n  array.forEach(element => {\n      if (!grouped.find(item => item[prop] === element[prop])) {\n          value = element[prop]\n          grouped.push(value)\n      }\n  })\n  \n  return grouped\n}\n\nconst setAverageDescription = array => {\n  let descriptions = []\n  array.forEach(item => {\n    descriptions = groupBy(item.measures, 'mainDescription')\n    const rains = {name: 'Rain', count: counter(descriptions, 'Rain')}\n    const clouds = {name: 'Clouds', count: counter(descriptions, 'Clouds')}\n    const clears = {name: 'Clear', count: counter(descriptions, 'Clear')}\n    const sorter = [rains, clouds, clears]\n    const sorted = sorter.sort((a, b) => b.count - a.count)\n    item.averageDescription = sorted[0].name\n  })\n}\n\nconst counter = (array, prop) => {\n  return array.filter(item => item === prop).length\n}","import axios from 'axios'\nimport { idApi } from '../env'\nimport { FETCH_FORECASTS } from './types'\nimport { TOGGLE_SCALE } from './types'\nimport { CHANGE_DAYS } from './types'\nimport { CHANGE_DETAILS } from './types'\nimport { forecastsController } from './forecastsController'\n\nlet dayCards = []\n\nexport const fetchForecasts = isFahrenheit => dispatch => {\n  let scale = isFahrenheit ? 'imperial' : 'metric'\n  const url = `https://api.openweathermap.org/data/2.5/forecast?q=Munich,de&` +\n  `units=${scale}&APPID=${idApi}&cnt=40`\n  \n  axios.get(url)\n    .then(response => response.data.list)\n    .then(forecasts => {\n      let simplified = forecastsController(forecasts)\n      dayCards = [0, 1, 2]\n\n      dispatch({\n        type: FETCH_FORECASTS,\n        payload: simplified\n      })\n    })\n    .catch(error => console.log(error.response))\n}\n\nexport const handleIsFahrenheit = isFahrenheit => dispatch => {\n  dispatch({\n    type: TOGGLE_SCALE,\n    payload: isFahrenheit\n  })\n}\n\nexport const changeDays = increment => dispatch => {\n  if (dayCards.length === 0) dayCards = [0, 1, 2]\n  let newDayCards = increment ? \n    dayCards.map(item => item + 1) : \n    dayCards.map(item => item - 1)\n  dayCards = newDayCards\n\n  dispatch({\n    type: CHANGE_DAYS,\n    payload: newDayCards\n  })\n}\n\nexport const changeDetails = (days, number) => dispatch => {\n  let details = {}\n  let array = [].concat(days)\n  if (array[number]) {\n    const measures = array[number].measures\n    const date = array[number].date\n    const averageDescription = array[number].averageDescription\n    details = { measures, date, averageDescription }\n  } \n\n  dispatch({\n    type: CHANGE_DETAILS,\n    payload: details\n  })\n}","export const idApi = '75f972b80e26f14fe6c920aa6a85ad57'","export const FETCH_FORECASTS = 'FETCH_FORECASTS'\nexport const TOGGLE_SCALE = 'TOGGLE_SCALE'\nexport const CHANGE_DAYS = 'CHANGE_DAYS'\nexport const CHANGE_DETAILS = 'CHANGE_DETAILS'","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  transform: \"translate(-656 -122)\"\n}, React.createElement(\"path\", {\n  d: \"M31.8,24.247l5.333-5.333L31.8,13.58V6.023H24.247L18.914.69,13.58,6.023H6.023V13.58L.69,18.914l5.333,5.333V31.8H13.58l5.333,5.333L24.247,31.8H31.8V24.247Zm-12.89,4.334a9.668,9.668,0,1,1,9.668-9.668A9.675,9.675,0,0,1,18.914,28.582Z\",\n  transform: \"translate(655.31 121.31)\",\n  fill: \"#ff8f00\"\n}), React.createElement(\"path\", {\n  d: \"M31.179,13.732A12.073,12.073,0,0,0,8.62,10.51,9.664,9.664,0,0,0,9.668,29.781H30.615a8.033,8.033,0,0,0,.564-16.048Z\",\n  transform: \"translate(668.89 130.89)\",\n  fill: \"#fff\"\n}));\n\nvar SvgWeatherLogo = function SvgWeatherLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 51.562,\n    height: 38.671,\n    viewBox: \"0 0 51.562 38.671\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgWeatherLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/WeatherLogo.dc2adcd4.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Switch from '@material-ui/core/Switch'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\nimport { handleIsFahrenheit } from '../actions/forecastActions'\nimport { fetchForecasts } from '../actions/forecastActions'\nimport { Hidden } from '@material-ui/core'\n\nclass ScaleSwitcher extends Component { \n  toggleScale (event) {\n    let result = event.target.checked\n    let { handleIsFahrenheit, fetchForecasts } = this.props\n\n    handleIsFahrenheit(result)\n    fetchForecasts(result)\n  }\n\n  textStyle = () => {\n    return {\n      fontWeight: '400',\n    }\n  }\n\n  containerStyle = () => {\n    return {\n      height: '100%',\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }\n\n  render() {\n    let { forecasts: { isFahrenheit } } = this.props\n\n    return (\n      <div style={this.containerStyle()}>\n        <Hidden xsDown>\n          <Typography \n            variant=\"h6\" \n            color=\"inherit\" \n            style={this.textStyle()}\n          >\n            CELSIUS\n          </Typography>\n        </Hidden>\n        <Hidden smUp>\n          <Typography \n            variant=\"h6\" \n            color=\"inherit\" \n            style={this.textStyle()}\n          >\n            °C\n          </Typography>\n        </Hidden>\n        <OrangeSwitch\n          checked={isFahrenheit}\n          onChange={(event) => this.toggleScale(event)}\n          inputProps={{ 'aria-label': 'scale checkbox' }}\n        />\n        <Hidden smUp>\n          <Typography \n            variant=\"h6\" \n            color=\"inherit\" \n            style={this.textStyle()}\n          >\n            °F\n          </Typography>\n        </Hidden>\n        <Hidden xsDown>\n          <Typography \n            variant=\"h6\" \n            color=\"inherit\" \n            style={this.textStyle()}\n          >\n            FAHRENHEIT\n          </Typography>\n        </Hidden>\n        \n      </div>\n    )\n  }\n}\n\nScaleSwitcher.propTypes = {\n  handleIsFahrenheit: PropTypes.func.isRequired,\n  fetchForecasts: PropTypes.func.isRequired,\n  forecasts: PropTypes.object.isRequired\n}\n\nconst OrangeSwitch = withStyles({\n  switchBase: {\n    color: '#FF8F00',\n    '&$checked': {\n      color: '#FF8F00',\n    },\n    '&$checked + $track': {\n      backgroundColor: '#FF8F00',\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\nconst mapStateToProps = state => ({\n  forecasts: state.forecasts\n})\n\nexport default connect (mapStateToProps, { handleIsFahrenheit, fetchForecasts })(ScaleSwitcher)","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nimport { ReactComponent as Logo } from '../assets/WeatherLogo.svg'\nimport ScaleSwitcher from './ScaleSwitcher'\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  nameBold: {\n    fontWeight: 900,\n    color: '#FF8F00'\n  }\n})\n\nexport default function Header() {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      <AppBar color=\"primary\">\n        <Toolbar>\n          <Logo />\n          <Typography \n            variant=\"h5\" \n            color=\"inherit\" \n            className={classes.title}\n          >\n            &nbsp;WEATHER&nbsp;\n            <span className={classes.nameBold}>\n              CHECKER\n            </span>\n          </Typography>\n          <ScaleSwitcher />\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  base: {\n    backgroundColor: 'silver',\n    width: '100vw',\n    height: '100vh'\n  },\n  container: {\n    marginTop: '64px',\n    minHeight: '90vh',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  root: {\n    flexGrow: 1,\n  },\n  button: {\n    backgroundColor: '#aaaaaa',\n    borderRadius: '50%',\n    height:'56px',\n    width: '56px'\n  },\n  card: {\n    backgroundColor: '#aaaaaa',\n    borderRadius: '5px',\n    maxWidth: 345,\n    height: 250\n  },\n  chart: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#aaaaaa',\n    borderRadius: '5px',\n    height: '35vh',\n    color: '#666666',\n  }\n}))\n\nexport default function Loader() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <React.Fragment>\n        <CssBaseline />\n        <div className={classes.base}>\n          <Container \n            fixed \n            maxWidth=\"lg\" \n            className={classes.container}\n          >\n            <div className={classes.root}>\n              <Grid \n                container \n                justify=\"center\"\n              >\n                <Grid \n                  container\n                  item \n                  sm={2} \n                  spacing={3}\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                </Grid>\n                <Grid \n                  container \n                  item \n                  sm={8} \n                  spacing={3}\n                >\n                  <Grid item sm={4}>\n                    <div className={classes.card}></div>\n                  </Grid>\n                  <Grid item sm={4}>\n                    <div className={classes.card}></div>\n                  </Grid>\n                  <Grid item sm={4}>\n                    <div className={classes.card}></div>\n                  </Grid>\n                  <Grid item sm={12}>\n                    <div className={classes.chart}>\n                      <Typography variant=\"h2\">\n                        Loading...\n                      </Typography>\n                    </div>\n                  </Grid>\n                </Grid>\n                <Grid \n                  container \n                  item\n                  sm={2} \n                  spacing={3}\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                  <div className={classes.button}></div>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Rain from '../assets/rain.jpg'\nimport Clouds from '../assets/clouds.jpg'\nimport Clear from '../assets/clear.jpg'\n\nclass Background extends Component {\n\n  backgroundStyle(props) {\n    let Image\n\n    switch (props) {\n      case 'Rain':\n        Image = Rain\n        break\n    \n      case 'Clouds':\n        Image = Clouds\n        break\n\n      case 'Clear':\n        Image = Clear\n        break\n        \n      default:\n        break\n    }\n\n    return {\n      width: '100vw',\n      height: '100vh',\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      backgroundImage: `url(${Image})`,\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      zIndex: -1,\n      opacity: 0.6,\n      filter: 'blur(5px)'\n    }\n  }\n\n  render() {\n    let { dayDescription } = this.props\n\n    return (\n      <div style={this.backgroundStyle(dayDescription)}>\n      </div>\n    )\n  }\n}\n\nBackground.propTypes = {\n  dayDescription: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  dayDescription: state.forecasts.dayDescription\n})\n\nexport default connect(mapStateToProps, { })(Background)","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Fab from '@material-ui/core/Fab'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeftRounded'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRightRounded'\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n  },\n}))\n\nexport default function Button(props) {\n  const classes = useStyles()\n  let next = props.direction\n\n  return (\n    <div>\n      <Fab \n        color=\"primary\" \n        aria-label=\"next\" \n        className={classes.fab}\n      >\n        {next ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n      </Fab>\n    </div>\n  )\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Button from './Button'\nimport { connect } from 'react-redux'\nimport { changeDays } from '../actions/forecastActions'\n\nclass TimeController extends Component {\n  render() {\n    let {increment, dayCards, days} = this.props\n    \n    if (dayCards[0] === 0 && !increment) return null\n    if (dayCards[2] === days.length-1 && increment) return null\n    return (\n      <div onClick={() => this.props.changeDays(increment)}>\n        <Button \n          direction={increment}\n        />\n      </div>\n    )\n  }\n}\n\nTimeController.propTypes = {\n  changeDays: PropTypes.func.isRequired,\n  increment: PropTypes.bool.isRequired,\n  dayCards: PropTypes.array.isRequired,\n  days: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n  dayCards: state.forecasts.dayCards,\n  days: state.forecasts.days\n})\n\nexport default connect (mapStateToProps, { changeDays })(TimeController)","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Hour(props) {\n  const callIcon = () => {\n    return `http://openweathermap.org/img/wn/${props.icon}.png`\n  }\n\n  const Temperature = () => {\n    if (props.fahrenheit) {\n      return (\n        <Typography variant=\"body2\">\n        { Math.round(props.temp) }°F\n      </Typography>\n      )\n    }\n    return (\n      <Typography variant=\"body2\">\n        { Math.round(props.temp) }°C\n      </Typography>\n    )\n  }\n\n  const barStyle = () => {\n    let height = props.fahrenheit ? props.temp*0.6 : props.temp*2\n    return {\n      height: `${height}%`,\n      width: '44px',\n      backgroundImage: 'linear-gradient(#FF8F00, #FFFFFF)',\n      borderRadius: '3px',\n      margin: '15px 0'\n    }\n  }\n\n  const containerStyle = () => {\n    return {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n      height: '33vh',\n    }\n  }\n\n  return (\n    <div style={containerStyle()}>\n      <img src={callIcon()} alt=\"forecast icon\"/>\n      <Temperature/>\n      <div style={barStyle()}></div>\n      <Typography variant=\"body2\">\n        { props.hour }\n      </Typography>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Hour from './Hour'\n\nclass Details extends Component {\n  \n  chartStyle() {\n    return {\n      minHeight: '33vh',\n      display: 'flex',\n      justifyContent: 'space-around',\n      alignItems: 'flex-end'\n    }\n  }\n\n  groupWrapper() {\n    return {\n      height: '100%'\n    }\n  }\n\n  render() {\n    const forecastHours = this.props.measures.map(measure => (\n      <div \n        key={measure.hour}\n        style={this.groupWrapper()}\n      >\n        <Hour \n          hour={measure.hour} \n          icon={measure.weatherIcon} \n          temp={measure.mainTemp} \n          fahrenheit={this.props.isFahrenheit}\n        />\n      </div>\n    ))\n    return (\n      <React.Fragment>\n        <div style={this.chartStyle()}>\n          {forecastHours}\n        </div>\n      </React.Fragment> \n    )\n  }\n}\n\nDetails.propTypes = {\n  measures: PropTypes.array.isRequired,\n  isFahrenheit: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = state => ({\n  measures: state.forecasts.measures,\n  isFahrenheit: state.forecasts.isFahrenheit\n})\n\nexport default connect(mapStateToProps, { })(Details)","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport { Typography } from '@material-ui/core';\nimport Details from './Details'\n\nclass ChartRow extends Component {\n\n  paperStyle() {\n    return {\n      padding: '12px',\n      textAlign: 'center'\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Grid item xs={12}>\n          <Paper \n            component={'div'} \n            style={this.paperStyle()}\n          >\n            <Typography\n              variant=\"subtitle1\"\n            >\n              {this.props.detailsDate}\n            </Typography>\n            <Details />\n          </Paper>\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\n\nChartRow.propTypes = {\n  detailsDate: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({\n  detailsDate: state.forecasts.detailsDate,\n})\n\nexport default connect(mapStateToProps, { })(ChartRow)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 320,\n    margin: 'auto'\n  },\n  media: {\n    height: 120,\n    backgroundColor: '#3f51b5',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: '#FF8F00'\n  },\n});\n\nexport default function DayCard(props) {\n  const classes = useStyles();\n\n  const Temperature = () => {\n    if (props.fahrenheit) {\n      return (\n        <Typography variant=\"h2\">\n          {props.temp}°F\n        </Typography>\n      )\n    }\n    return (\n      <Typography variant=\"h2\">\n        {props.temp}°C\n      </Typography>\n    )\n  }\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia className={classes.media}>\n          <Temperature/>\n        </CardMedia>\n        <CardContent>\n          <Typography \n            gutterBottom \n            variant=\"h5\"\n          >\n            {props.date}\n          </Typography>\n          <Typography \n            variant=\"body2\" \n            color=\"textSecondary\" \n            component=\"p\"\n          >\n            {props.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button \n          size=\"small\" \n          color=\"primary\"\n        >\n          Forecast Details\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\nimport DayCard from './DayCard'\nimport { changeDetails } from '../actions/forecastActions'\n\nclass CardRow extends Component {\n  \n  getDates(days, number) {\n    let array = [].concat(days)\n    if (array[number]) return array[number].date\n    return\n  }\n\n  getTemperature(days, number) {\n    let array = [].concat(days)\n    if (array[number]) return array[number].averageTemp\n    return\n  }\n\n  getDescription(days, number) {\n    let array = [].concat(days)\n    if (array[number]) return array[number].averageDescription\n    return\n  }\n\n  render() {\n    let { days, dayCards, isFahrenheit, changeDetails } = this.props\n    return (\n      <React.Fragment>\n        <Grid item sm={4} xs={12}>\n          <div onClick={() => changeDetails(days, dayCards[0])}>\n            <DayCard \n              date={this.getDates(days, dayCards[0])}\n              temp={this.getTemperature(days, dayCards[0])}\n              fahrenheit={isFahrenheit}\n              description={this.getDescription(days, dayCards[0])}\n            />\n          </div>\n        </Grid>\n        <Grid item sm={4} xs={12}>\n          <div onClick={() => changeDetails(days, dayCards[1])}>\n            <DayCard \n              date={this.getDates(days, dayCards[1])}\n              temp={this.getTemperature(days, dayCards[1])}\n              fahrenheit={isFahrenheit}\n              description={this.getDescription(days, dayCards[1])}\n            />\n          </div>\n        </Grid>\n        <Grid item sm={4} xs={12}>\n          <div onClick={() => changeDetails(days, dayCards[2])}>\n            <DayCard \n              date={this.getDates(days, dayCards[2])}\n              temp={this.getTemperature(days, dayCards[2])}\n              fahrenheit={isFahrenheit}\n              description={this.getDescription(days, dayCards[2])}\n            />\n          </div>\n        </Grid>\n      </React.Fragment>\n    )\n  }\n}\n\nCardRow.propTypes = {\n  changeDetails: PropTypes.func.isRequired,\n  days: PropTypes.array.isRequired,\n  isFahrenheit: PropTypes.bool.isRequired,\n  dayCards: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n  days: state.forecasts.days,\n  isFahrenheit: state.forecasts.isFahrenheit,\n  dayCards: state.forecasts.dayCards\n})\n\nexport default connect(mapStateToProps, { changeDetails })(CardRow)","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport TimeController from './TimeController'\nimport ChartRow from './ChartRow'\nimport CardRow from './CardRow'\nimport { Hidden } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginTop: '64px',\n    minHeight: '90vh',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  root: {\n    flexGrow: 1,\n  }\n}))\n\nexport default function Forecasts() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <React.Fragment>\n        <CssBaseline />\n        <Container \n          fixed \n          maxWidth=\"lg\" \n          className={classes.container}\n        >\n        <div className={classes.root}>\n          <Grid \n            container \n            justify=\"center\"\n          >\n            <Hidden smDown>\n              <Grid \n                container\n                item \n                sm={2} \n                spacing={3}\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <TimeController increment={false}/>\n              </Grid>\n            </Hidden>\n            <Grid \n              container \n              item \n              md={8}\n              sm={12} \n              spacing={3}\n              justify=\"center\"\n            >\n              <Hidden mdUp>\n                <Grid \n                  container\n                  item \n                  xs={6} \n                  spacing={3}\n                  justify=\"flex-start\"\n                  alignItems=\"center\"\n                >\n                  <TimeController increment={false}/>\n                </Grid>\n                <Grid \n                  container\n                  item \n                  xs={6} \n                  spacing={3}\n                  justify=\"flex-end\"\n                  alignItems=\"center\"\n                >\n                  <TimeController increment={true}/>\n                </Grid>\n              </Hidden>\n              <CardRow />\n              <ChartRow />\n            </Grid>\n            <Hidden smDown>\n              <Grid \n                container \n                item\n                sm={2} \n                spacing={3}\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <TimeController increment={true}/>\n              </Grid>\n            </Hidden>\n          </Grid>\n        </div>\n        </Container>\n      </React.Fragment>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { fetchForecasts } from '../actions/forecastActions'\nimport Header from './Header'\nimport Loader from './Loader'\nimport Background from './Background'\nimport Forecasts from './Forecasts'\n\nclass Content extends Component {\n  componentDidMount() {\n    this.props.fetchForecasts(this.props.isFahrenheit)\n  }\n\n  render() {\n    let { isLoading } = this.props\n\n    const checkLoad = loading => {\n      if (loading) {\n        return (\n          <div>\n            <Header />\n            <Loader />\n          </div>\n        )\n      }\n      return (\n        <div>\n          <Background />\n          <Header />\n          <Forecasts />\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        { checkLoad(isLoading) }\n      </div>\n    )\n  }\n}\n\nContent.propTypes = {\n  fetchForecasts: PropTypes.func.isRequired,\n  isFahrenheit: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = state => ({\n  isFahrenheit: state.forecasts.isFahrenheit,\n  isLoading: state.forecasts.isLoading\n})\n\nexport default connect(mapStateToProps, { fetchForecasts })(Content)","import { FETCH_FORECASTS } from '../actions/types'\nimport { TOGGLE_SCALE } from '../actions/types'\nimport { CHANGE_DAYS } from '../actions/types'\nimport { CHANGE_DETAILS } from '../actions/types'\n\nconst initialState = {\n  days: [],\n  measures: [],\n  isFahrenheit: false,\n  dayCards: [0, 1, 2],\n  detailsDate: '',\n  dayDescription: '',\n  isLoading: true\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_FORECASTS:\n      return {\n        ...state,\n        days: action.payload,\n        measures: action.payload[0].measures,\n        dayCards: [0, 1, 2],\n        detailsDate: action.payload[0].date,\n        dayDescription: action.payload[0].averageDescription,\n        isLoading: false\n      }\n\n    case TOGGLE_SCALE:\n      return {\n        ...state,\n        isFahrenheit: action.payload,\n        isLoading: true,\n      }\n\n    case CHANGE_DAYS:\n      return {\n        ...state,\n        dayCards: action.payload\n      }\n\n    case CHANGE_DETAILS:\n      return {\n        ...state,\n        measures: action.payload.measures,\n        detailsDate: action.payload.date,\n        dayDescription: action.payload.averageDescription\n      }\n  \n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport forecastReducer from './forecastReducer'\n\nexport default combineReducers({\n  forecasts: forecastReducer\n})","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer, \n  initialState, \n  compose(\n    applyMiddleware(...middleware),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    // window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n)\n\nexport default store","import React, { Component } from 'react'\nimport 'typeface-roboto'\nimport './App.css'\nimport { Provider } from 'react-redux'\nimport Content from './components/Content'\nimport store from './store'\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div>\n          <Content />\n        </div>\n      </Provider>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}